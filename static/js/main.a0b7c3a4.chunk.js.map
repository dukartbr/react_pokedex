{"version":3,"sources":["Context/PokedexReducer.js","Context/PokedexGlobalState.js","Context/BattleReducer.js","Context/BattleGlobalState.js","ui/index.js","api.js","Components/Pokedex/MovesTable.js","Components/Pokedex/pokemonCard.js","Components/Pokedex/PokemonButton.js","Components/Pokedex/Welcome.js","Components/Pokedex/PokedexLeftHeader.js","Components/Pokedex/PartyItem.js","Components/Pokedex/PartyContainer.js","Components/Pokedex/GenerationsTab.js","Components/Pokedex/SearchBar.js","Components/Pokedex/BattleButton.js","Components/Pokedex/pokedex.js","Components/Battle/InitialMenu.js","Components/Battle/MovesMenu.js","Components/Battle/BottomMenuContainer.js","Components/Battle/PartyList.js","Components/Battle/ItemList.js","Components/Battle/CurrentPokemonStats.js","Components/Battle/OpponentScene.js","Components/Battle/PlayerScene.js","Components/Battle/BattleScene.js","Components/Battle/Index.js","App.js","index.js"],"names":["state","action","type","party","payload","filter","p","id","initialState","PokedexGlobalContext","React","createContext","PokedexGlobalProvider","children","useReducer","PokedexReducer","dispatch","Provider","value","addLocalStorageToParty","localStorageRef","addPokemonToParty","pokemon","removePokemonFromParty","opponentParty","playerParty","BattleGlobalContext","BattleGlobalProvider","BattleReducer","addPokemonToOpponentParty","Colors","breakpoints","Box","styled","div","border","space","color","typography","layout","flexbox","grid","background","position","shadow","Header","textAlign","fontFamily","fontSize","width","Subheader","textTransform","Title","Span","display","Row","flexWrap","marginRight","marginLeft","NoMarginRow","Column","flexDirection","Container","Panel","borderRadius","SmallScreen","LargeScreen","SearchInput","input","Button","button","ListContainer","ul","ListItem","li","Image","img","Icon","i","Table","table","TableData","td","TableHeadData","th","TableHead","thead","TableRow","tr","TableBody","tbody","Strong","strong","generations","gen1","gen2","gen3","gen4","MovesTable","moveStats","className","map","move","key","name","damage_class","power","accuracy","PokemonCard","currentPokemon","partyHandler","isInParty","abilities","images","stats","types","useState","abilityDescriptions","setAbilityDescriptions","setMoveStats","useEffect","Promise","all","ability","Axios","get","url","then","values","data","effect_entries","short_effect","moves","length","slice","bg","borderColor","height","onClick","css","src","front_default","alt","padding","stat","float","base_stat","bottom","right","fontWeight","mr","ml","PokemonButton","renderCard","Welcome","PokedexLeftHeader","mt","boxShadow","pt","PartyItem","renderCardHandler","pokemonName","style","top","left","PartyContainer","renderPartyCard","GenerationsTab","props","updateGenHandler","e","updateGeneration","target","zIndex","SearchBar","setSearchQuery","searchQuery","onChange","Pokedex","useContext","generation","setGeneration","pokemons","setPokemons","setcurrentPokemon","displayCard","setDisplayCard","find","getPokemon","JSON","parse","localStorage","getItem","gen","response","results","console","log","message","setItem","stringify","res","sprites","catch","filteredPokemon","pokemonList","query","toLowerCase","indexOf","pb","borderRaidus","overflow","alert","InitialMenu","toggleFighting","sceneToggler","to","MovesMenu","BottomMenuContainer","isFighting","setIsFighting","backgroundColor","PartyList","ItemList","CurrentPokemonStats","baseStats","level","Math","floor","reduce","a","b","health","OpponentScene","PlayerScene","back_default","BattleScene","Battle","setParty","viewState","setViewState","viewBattle","setViewBattle","generationValues","Object","gensArr","random","push","forEach","getOpponentParty","scene","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0b7c3a4.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case 'ADD_LOCAL_STORAGE_TO_PARTY':\n      return {\n        ...state,\n        party: action.payload,\n      };\n    case 'ADD_POKEMON_TO_PARTY':\n      return {\n        ...state,\n        party: [...state.party, action.payload],\n      };\n    case 'REMOVE_POKEMON_FROM_PARTY':\n      return {\n        ...state,\n        party: state.party.filter(p => p.id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport PokedexReducer from './PokedexReducer';\n\nconst initialState = {\n  party: [],\n};\n\nexport const PokedexGlobalContext = React.createContext(initialState);\n\nexport const PokedexGlobalProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(PokedexReducer, initialState);\n\n  // Actions\n  const addLocalStorageToParty = localStorageRef => {\n    dispatch({\n      type: 'ADD_LOCAL_STORAGE_TO_PARTY',\n      payload: localStorageRef,\n    });\n  };\n\n  const addPokemonToParty = pokemon => {\n    dispatch({\n      type: 'ADD_POKEMON_TO_PARTY',\n      payload: pokemon,\n    });\n  };\n\n  const removePokemonFromParty = id => {\n    dispatch({\n      type: 'REMOVE_POKEMON_FROM_PARTY',\n      payload: id,\n    });\n  };\n\n  return (\n    <PokedexGlobalContext.Provider\n      value={{\n        party: state.party,\n        addLocalStorageToParty,\n        addPokemonToParty,\n        removePokemonFromParty,\n      }}\n    >\n      {children}\n    </PokedexGlobalContext.Provider>\n  );\n};\n","export default (state, action) => {\n  switch (action.type) {\n    case 'ADD_POKEMON_TO_OPPONENT_PARTY':\n      return {\n        ...state,\n        opponentParty: [...state.opponentParty, action.payload],\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport BattleReducer from './BattleReducer';\n\nconst initialState = {\n  playerParty: [],\n  opponentParty: [],\n};\n\nexport const BattleGlobalContext = React.createContext(initialState);\n\nexport const BattleGlobalProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(BattleReducer, initialState);\n\n  // Actions\n  const addPokemonToOpponentParty = pokemon => {\n    dispatch({\n      type: 'ADD_POKEMON_TO_OPPONENT_PARTY',\n      payload: pokemon,\n    });\n  };\n\n  return (\n    <BattleGlobalContext.Provider\n      value={{\n        playerParty: state.playerParty,\n        opponentParty: state.opponentParty,\n        addPokemonToOpponentParty,\n      }}\n    >\n      {children}\n    </BattleGlobalContext.Provider>\n  );\n};\n","import styled from 'styled-components';\nimport {\n  border,\n  space,\n  color,\n  typography,\n  layout,\n  flexbox,\n  grid,\n  background,\n  position,\n  shadow,\n} from 'styled-system';\n\nexport const Colors = {\n  DarkRed: '#dc0059',\n  LightRed: '#ff0050',\n  Orange: '#ff8945',\n  Yellow: '#faf139',\n  Green: '#00fc2b',\n  BlueOne: '#14eaff',\n  BlueTwo: '#14daff',\n  BlueThree: '#14a9ff',\n  Gray: '#f1f5e6',\n  DarkGray: '#040054',\n  DarkPurple: '#4f045a',\n};\n\nexport const sizes = {\n  AppHeight: '1000px',\n};\n\nexport const breakpoints = {\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n};\n\nexport const Box = styled.div`\n    ${border}\n    ${space}\n    ${color}\n    ${typography}\n    ${layout}\n    ${flexbox}\n    ${grid}\n    ${background}\n    ${position}\n    ${shadow}\n`;\n\nexport const Header = styled(Box)({\n  textAlign: 'center',\n  color: 'white',\n  fontFamily: 'Acme',\n  fontSize: '2.5rem',\n  width: '100%',\n});\n\nexport const Subheader = styled(Box)({\n  textAlign: 'center',\n  fontFamily: 'Acme',\n  fontSize: '2rem',\n  width: '100%',\n  textTransform: 'capitalize',\n});\n\nexport const Title = styled(Subheader)({\n  fontFamily: 'Asap',\n  textAlign: 'center',\n  fontSize: '1.5rem',\n});\n\nexport const Span = styled(Box)({\n  fontSize: '1rem',\n  display: 'block',\n  fontFamily: 'Asap',\n  textTransform: 'capitalize',\n  //   color: 'white',\n});\n\nexport const Row = styled(Box)({\n  display: 'flex',\n  flexWrap: 'wrap',\n  marginRight: '-15px',\n  marginLeft: '-15px;',\n});\n\nexport const NoMarginRow = styled(Box)({\n  display: 'flex',\n  flexWrap: 'wrap',\n  marginRight: '0px',\n  marginLeft: '0px',\n});\n\nexport const Column = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport const Container = styled.div`\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  @media screen and (min-width: ${breakpoints.sm}) {\n    max-width: 540px;\n  }\n  @media screen and (min-width: ${breakpoints.md}) {\n    max-width: 720px;\n  }\n  @media screen and (min-width: ${breakpoints.lg}) {\n    max-width: 960px;\n  }\n  @media screen and (min-width: ${breakpoints.xl}) {\n    max-width: 1140px;\n  }\n`;\n\nexport const Panel = styled.div`\n  background-color: ${Colors.LightRed};\n  border: 2px solid ${Colors.DarkPurple};\n  ${border.borderRadius}\n  padding: 30px;\n  height: ${sizes.AppHeight};\n  position: relative;\n  box-shadow: 5px 10px 15px ${Colors.DarkPurple};\n`;\n\nexport const SmallScreen = styled(Box)`\n  background: repeating-linear-gradient(\n    45deg,\n    #14daff,\n    #14daff 20px,\n    #14eaff 20px,\n    #14eaff 40px\n  );\n`;\n\nexport const LargeScreen = styled(Box)`\n  background: repeating-linear-gradient(\n    45deg,\n    #14daff,\n    #14daff 80px,\n    #14eaff 80px,\n    #14eaff 160px\n  );\n  border: 2px solid ${Colors.DarkPurple};\n`;\n\nexport const SearchInput = styled.input`\n  width: 80%;\n  margin-right: 10%;\n  margin-left: 10%;\n  margin-bottom: 15px;\n  background-color: transparent;\n  border: none;\n  font-family: 'Acme';\n  color: ${Colors.DarkPurple};\n  border-bottom: 2px solid ${Colors.DarkPurple};\n`;\n\nexport const Button = styled.button``;\n\nexport const ListContainer = styled.ul``;\n\nexport const ListItem = styled.li``;\n\nexport const Image = styled.img``;\n\nexport const Icon = styled.i``;\n\nexport const Text = styled.p``;\n\nexport const Table = styled.table`\n  width: 100%;\n`;\n\nexport const TableData = styled.td`\n  border: 1px solid ${Colors.Orange};\n  padding: 5px;\n`;\n\nexport const TableHeadData = styled.th`\n  border: 1px solid ${Colors.Orange};\n  padding: 5px;\n`;\n\nexport const TableHead = styled.thead``;\n\nexport const TableRow = styled.tr``;\n\nexport const TableBody = styled.tbody``;\n\nexport const Strong = styled.strong``;\n","// Generations\nexport const generations = {\n  gen1: 'https://pokeapi.co/api/v2/pokemon?limit=151',\n  gen2: 'https://pokeapi.co/api/v2/pokemon?limit=100&offset=151',\n  gen3: 'https://pokeapi.co/api/v2/pokemon?limit=135&offset=251',\n  gen4: 'https://pokeapi.co/api/v2/pokemon?limit=107&offset=386',\n};\n","import React from 'react';\nimport {\n  Table,\n  TableData,\n  TableHeadData,\n  TableHead,\n  TableRow,\n  TableBody,\n} from '../../ui';\n\nconst MovesTable = ({ moveStats }) => {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Name\n          </TableHeadData>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Class\n          </TableHeadData>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Power\n          </TableHeadData>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Accuracy\n          </TableHeadData>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {moveStats.map((move, i) => (\n          <TableRow key={i}>\n            <TableData>{move.name}</TableData>\n            <TableData>{move.damage_class}</TableData>\n            <TableData>{move.power ? move.power : 'N/A'}</TableData>\n            <TableData>{move.accuracy ? move.accuracy : 'N/A'}</TableData>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default MovesTable;\n","import React from 'react';\nimport Axios from 'axios';\nimport { css } from 'emotion';\nimport {\n  Box,\n  Column,\n  Container,\n  Row,\n  Button,\n  SmallScreen,\n  Subheader,\n  Span,\n  Title,\n  Colors,\n  Image,\n  Icon,\n  ListContainer,\n  ListItem,\n} from '../../ui';\nimport MovesTable from './MovesTable';\n\nconst PokemonCard = ({ currentPokemon, party, partyHandler, isInParty }) => {\n  const { id, name, abilities, images, stats, types } = currentPokemon;\n  let [abilityDescriptions, setAbilityDescriptions] = React.useState([]);\n  let [moveStats, setMoveStats] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all(\n      abilities.map(ability => {\n        return Axios.get(ability.ability.url);\n      })\n    ).then(values => {\n      setAbilityDescriptions(\n        values.map(value => value.data.effect_entries[0].short_effect)\n      );\n    });\n  }, [abilities]);\n\n  React.useEffect(() => {\n    const { moves } = currentPokemon;\n    if (moveStats.length > 0) return;\n    Promise.all(\n      moves.slice(0, 4).map(move => {\n        return Axios.get(move.move.url);\n      })\n    ).then(values => {\n      setMoveStats(\n        values.map(value => ({\n          name: value.data.name,\n          damage_class: value.data.damage_class.name,\n          accuracy: value.data.accuracy,\n          power: value.data.power,\n        }))\n      );\n    });\n  }, [currentPokemon, moveStats]);\n\n  React.useEffect(() => {\n    setAbilityDescriptions([]);\n    setMoveStats([]);\n  }, [id]);\n\n  const togglePartyHandler = pokemon => {\n    partyHandler(pokemon);\n  };\n\n  return (\n    <Container>\n      <Box\n        p='30px 10px'\n        bg='#f1f5e6'\n        border='2px solid'\n        borderColor={Colors.DarkPurple}\n        borderRadius='15px'\n      >\n        <Box height='100px'>\n          <Subheader color='$DarkRed'>{name}</Subheader>\n          {types.map(pokemon => (\n            <Span key={pokemon.type.name} color='#000000' textAlign='center'>\n              {pokemon.type.name}\n            </Span>\n          ))}\n        </Box>\n        <SmallScreen\n          border='2px solid'\n          borderColor={Colors.DarkPurple}\n          borderRadius='15px'\n          height='250px'\n          display='block'\n          textAlign='center'\n          position='relative'\n        >\n          <Button\n            onClick={() => togglePartyHandler(currentPokemon)}\n            className={css`\n              float: left;\n              color: white;\n              margin-top: 5px;\n              margin-left: 5px;\n              background-color: ${Colors.Orange};\n              border: none;\n              padding: 10px;\n              border-radius: 15px;\n              &:disabled {\n                background-color: gray;\n              }\n            `}\n          >\n            {isInParty ? (\n              <Icon className='fas fa-trash'></Icon>\n            ) : (\n              <Icon className='fas fa-star'></Icon>\n            )}\n          </Button>\n          <Row>\n            <Column width='40%'>\n              <Image src={images.front_default} alt='' width='200px' />\n            </Column>\n            <Column width='60%'>\n              <Box padding='15px 20px'>\n                <Title color='white'>Stats</Title>\n                <ListContainer>\n                  {stats.map(pokemon => (\n                    <ListItem\n                      key={pokemon.stat.name}\n                      className={css`\n                        list-style-type: none;\n                        color: white;\n                        text-align: left;\n                        font-weight: bold;\n                        font-family: 'Asap', sans-serif;\n                        text-transform: uppercase;\n                      `}\n                    >\n                      <Span float='right'>\n                        {pokemon.stat.name}: {pokemon.base_stat}\n                      </Span>\n                    </ListItem>\n                  ))}\n                </ListContainer>\n              </Box>\n            </Column>\n          </Row>\n          <Span\n            position='absolute'\n            bottom='5px'\n            right='5px'\n            color='black'\n            fontWeight='bold'\n          >\n            ID: {id}\n          </Span>\n        </SmallScreen>\n        <Row>\n          <Column width='100%'>\n            <Title>Abilities</Title>\n            <ListContainer>\n              {abilities.map((ability, i) => {\n                return (\n                  <ListItem key={i}>\n                    {ability.ability.name} - {abilityDescriptions[i]}\n                  </ListItem>\n                );\n              })}\n            </ListContainer>\n          </Column>\n        </Row>\n        <Row>\n          <Box\n            mr='10%'\n            ml='10%'\n            width='80%'\n            background={Colors.Yellow}\n            border='3px solid'\n            borderColor={Colors.Orange}\n            p='20px 0px'\n            borderRadius='30px'\n          >\n            <Title>Moves</Title>\n            <MovesTable moveStats={moveStats} />\n          </Box>\n        </Row>\n      </Box>\n    </Container>\n  );\n};\n\nexport default PokemonCard;\n","import React from 'react';\nimport { css } from 'emotion';\n\nconst PokemonButton = ({ name, renderCard, pokemon }) => (\n  <button\n    key={name}\n    onClick={() => renderCard(pokemon)}\n    className={css`\n      padding: 10px 20px;\n      background: none;\n      border: none;\n      color: white;\n      font-size: 55px;\n      text-align: center;\n      display: block;\n      margin: 10px 0px;\n      margin-right: auto;\n      margin-left: auto;\n      font-family: 'Acme', sans-serif;\n      text-transform: capitalize;\n    `}\n  >\n    {name}\n  </button>\n);\n\nexport default PokemonButton;\n","import React from 'react';\nimport { Span, Header } from '../../ui';\n\nconst Welcome = () => {\n  return (\n    <>\n      <Header>Welcome</Header>\n      <Span textAlign='center' color='#ffffff'>\n        This is a React based Pokedex using the PokeAPI\n      </Span>\n    </>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport { Box } from '../../ui';\n\nconst PokedexLeftHeader = () => {\n  return (\n    <Box\n      position='absolute'\n      ml='-53px'\n      mt='-53px'\n      borderRadius='50px 0px 0px 0px'\n      width='116%'\n      height='100px'\n      boxShadow='1px 2px 5px #4f045a'\n      bg='#ff0050'\n    >\n      <Box pt='5px'>\n        <Box textAlign='center' fontFamily='Acme' fontSize='60px' color='white'>\n          RéactDex\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PokedexLeftHeader;\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Box, SmallScreen, Image, Button } from '../../ui';\n\nconst PartyItem = ({ pokemon, renderCardHandler }) => {\n  return (\n    <Button\n      className={css`\n        background: transparent;\n        border: none;\n      `}\n      onClick={() => renderCardHandler(pokemon)}\n    >\n      <Box p='15px 0px'>\n        <SmallScreen\n          border='3px solid #faf139'\n          width='70px'\n          height='70px'\n          mr='5px'\n          ml='5px'\n          position='relative'\n        >\n          <Image\n            className='favorites--item'\n            src={pokemon.images.front_default}\n            alt={pokemon.pokemonName}\n            style={{\n              position: 'absolute',\n              width: '70px',\n              top: '0px',\n              left: '0px',\n            }}\n          />\n        </SmallScreen>\n      </Box>\n    </Button>\n  );\n};\n\nexport default PartyItem;\n","import React from 'react';\nimport { Row, Header } from '../../ui';\nimport PartyItem from './PartyItem';\n\nconst PartyContainer = ({ party, renderPartyCard }) => {\n  const renderCardHandler = pokemon => {\n    renderPartyCard(pokemon);\n  };\n\n  return (\n    <>\n      <Header\n        textAlign='center'\n        color='white'\n        fontFamily='Acme'\n        fontSize='35px'\n        width='100%'\n      >\n        Party\n      </Header>\n      <Row>\n        {party.map((pokemon, i) => (\n          <PartyItem\n            key={i}\n            pokemon={pokemon}\n            renderCardHandler={renderCardHandler}\n          />\n        ))}\n      </Row>\n    </>\n  );\n};\nexport default PartyContainer;\n","import React from 'react';\nimport { Box, ListContainer, ListItem, Button, Colors } from '../../ui';\nimport { css } from 'emotion';\n\nfunction GenerationsTab(props) {\n  const updateGenHandler = e => {\n    props.updateGeneration(e.target.id);\n  };\n\n  return (\n    <Box position='absolute' zIndex='999' left='-129px' top='70px'>\n      <ListContainer position='relative'>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen1'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 1\n          </Button>\n        </ListItem>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen2'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 2\n          </Button>\n        </ListItem>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen3'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 3\n          </Button>\n        </ListItem>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen4'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 4\n          </Button>\n        </ListItem>\n      </ListContainer>\n    </Box>\n  );\n}\n\nexport default GenerationsTab;\n","import React from 'react';\nimport { Box, SearchInput, Icon, Colors } from '../../ui';\n\nconst SearchBar = ({ setSearchQuery, searchQuery }) => {\n  return (\n    <Box position='relative'>\n      <Icon\n        className={'fas fa-search'}\n        style={{\n          color: `${Colors.DarkPurple}`,\n          top: '10px',\n          left: '5px',\n          position: 'absolute',\n        }}\n      ></Icon>\n      <SearchInput\n        type='text'\n        onChange={e => setSearchQuery(e.target.value)}\n        value={searchQuery}\n      />\n    </Box>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Link } from 'react-router-dom';\nimport { Box, Subheader, Button, Colors } from '../../ui';\n\nconst BattleButton = party => {\n  return (\n    <Box\n      bottom='20px'\n      left='0px'\n      right='0px'\n      ml='25%'\n      mr='25%'\n      position='absolute'\n      width='50%'\n    >\n      <Button\n        className={css`\n          background-color: ${Colors.BlueOne};\n          border: 3px solid ${Colors.Yellow};\n          border-radius: 25px;\n          width: 100%;\n          height: 75px;\n        `}\n      >\n        <Subheader>\n          <Link to='/battle' party={party}>\n            <Subheader color='white'>Battle!</Subheader>\n          </Link>\n        </Subheader>\n      </Button>\n    </Box>\n  );\n};\n\nexport default BattleButton;\n","import React from 'react';\nimport Axios from 'axios';\nimport {\n  PokedexGlobalContext,\n  PokedexGlobalProvider,\n} from '../../Context/PokedexGlobalState';\n\nimport { Box, Column, Container, Row, Panel, LargeScreen } from '../../ui';\nimport { generations } from '../../api';\nimport PokemonCard from './pokemonCard';\nimport PokemonButton from './PokemonButton';\nimport Welcome from './Welcome';\nimport PokedexLeftHeader from './PokedexLeftHeader';\nimport PartyContainer from './PartyContainer';\nimport GenerationsTab from './GenerationsTab';\nimport SearchBar from './SearchBar';\nimport BattleButton from './BattleButton';\n\nconst Pokedex = () => {\n  const {\n    party,\n    addLocalStorageToParty,\n    addPokemonToParty,\n    removePokemonFromParty,\n  } = React.useContext(PokedexGlobalContext);\n  let [generation, setGeneration] = React.useState('gen1');\n  let [pokemons, setPokemons] = React.useState([]);\n  let [currentPokemon, setcurrentPokemon] = React.useState({\n    id: null,\n    name: null,\n    abilities: [],\n    moves: [],\n    images: [],\n    stats: [],\n    types: [],\n  });\n  let [displayCard, setDisplayCard] = React.useState(false);\n  let [searchQuery, setSearchQuery] = React.useState('');\n  const isInParty = party.find((p) => p.id === currentPokemon.id);\n\n  React.useEffect(() => {\n    getPokemon(generation);\n    const localStorageRef = JSON.parse(localStorage.getItem('party'));\n    if (localStorageRef) {\n      addLocalStorageToParty(localStorageRef);\n    }\n  }, [generation]);\n\n  const getPokemon = (gen) => {\n    Axios.get(generations[gen]).then(\n      (response) => {\n        setPokemons(response.data.results);\n      },\n      (e) => {\n        console.log('handle error here: ', e.message);\n      }\n    );\n  };\n\n  const updateGeneration = (gen) => {\n    setGeneration(gen);\n  };\n\n  const togglePartyHandler = (pokemon) => {\n    if (!isInParty) {\n      if (party.length <= 4) {\n        addPokemonToParty(pokemon);\n      } else {\n        alert('You may only have up to 5 Pokemon in your party');\n      }\n    } else if (isInParty) {\n      removePokemonFromParty(pokemon.id);\n    }\n  };\n\n  React.useEffect(() => {\n    localStorage.setItem(`party`, JSON.stringify(party));\n  }, [party]);\n\n  const renderCard = (pokemon) => {\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n      .then((response) => {\n        const res = response.data;\n        const moves = res.moves.slice(0, 4);\n        setcurrentPokemon({\n          id: res.id,\n          name: res.name,\n          abilities: res.abilities,\n          moves: moves,\n          images: res.sprites,\n          stats: res.stats,\n          types: res.types,\n        });\n        setDisplayCard(true);\n      })\n      .catch((e) => {\n        console.log('handle error here: ', e.message);\n      });\n  };\n\n  const renderPartyCard = (pokemon) => {\n    renderCard(pokemon);\n  };\n\n  const filteredPokemon = (pokemonList, query) => {\n    if (!query) return pokemonList;\n    return pokemonList.filter(\n      (p) => p.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  };\n\n  return (\n    <PokedexGlobalProvider>\n      <Box position='relative' pt='3rem' pb='3rem'>\n        <GenerationsTab updateGeneration={updateGeneration} />\n        <Row>\n          <Column width='50%' p='0'>\n            <Panel borderRadius='50px 0px 0px 50px'>\n              <Box\n                position='relative'\n                p='20px'\n                border='3px solid #4f045a'\n                borderRaidus='30px 0px 0px 15px'\n                height='950px'\n              >\n                <PokedexLeftHeader />\n                <Box\n                  p='50px 10px'\n                  bg='#f1f5e6'\n                  border='2px solid #4f045a'\n                  borderRadius='30px'\n                  mt='110px'\n                >\n                  <SearchBar\n                    setSearchQuery={setSearchQuery}\n                    searchQuery={searchQuery}\n                  />\n                  <LargeScreen overflow='scroll' height='400px'>\n                    {filteredPokemon(pokemons, searchQuery).length !== 0 ? (\n                      filteredPokemon(pokemons, searchQuery).map((pokemon) => (\n                        <PokemonButton\n                          key={pokemon.name}\n                          name={pokemon.name}\n                          renderCard={renderCard}\n                          pokemon={pokemon}\n                        />\n                      ))\n                    ) : (\n                      <Box\n                        width='100%'\n                        textAlign='center'\n                        color='white'\n                        fontSize='3rem'\n                        fontFamily='Acme'\n                        mt='6rem'\n                      >\n                        No Results!\n                      </Box>\n                    )}\n                  </LargeScreen>\n                </Box>\n                <Box padding='15px 0px'>\n                  <Container>\n                    <Row>\n                      <PartyContainer\n                        party={party}\n                        renderPartyCard={renderPartyCard}\n                      />\n                    </Row>\n                  </Container>\n                </Box>\n              </Box>\n            </Panel>\n          </Column>\n          <Column width='50%' p='0'>\n            <Panel borderRadius='0px 50px 50px 0px' position='relative'>\n              {displayCard ? (\n                <PokemonCard\n                  currentPokemon={currentPokemon}\n                  party={party}\n                  partyHandler={togglePartyHandler}\n                  isInParty={isInParty}\n                />\n              ) : (\n                <Welcome />\n              )}\n              {/* {party.length >= 5 ? (\n                <BattleButton party={party} />\n              ) : ( */}\n              <Box\n                textAlign='center'\n                color='white'\n                fontFamily='Acme'\n                fontSize='35px'\n                position='absolute'\n                bottom='20px'\n                left='0px'\n                right='0px'\n                ml='25%'\n                mr='25%'\n                width='50%'\n              >\n                Party [{party.length} / 5]\n              </Box>\n              {/* )} */}\n            </Panel>\n          </Column>\n        </Row>\n      </Box>\n    </PokedexGlobalProvider>\n  );\n};\n\nexport default Pokedex;\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Link } from 'react-router-dom';\nimport { Box, Row, Button } from '../../ui';\n\nconst InitialMenu = ({\n  party,\n  currentPokemon,\n  toggleFighting,\n  sceneToggler,\n}) => {\n  return (\n    <Box\n      className={css`\n        position: absolute;\n        right: 10px;\n        bottom: 0;\n      `}\n    >\n      <Row width='300px'>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n          onClick={() => toggleFighting()}\n        >\n          Fight\n        </Button>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n          onClick={() => sceneToggler('partylist')}\n        >\n          Pokemon\n        </Button>\n      </Row>\n      <Row width='300px'>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n          onClick={() => sceneToggler('itemlist')}\n        >\n          Pack\n        </Button>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n        >\n          <Link to='/'>Run</Link>\n        </Button>\n      </Row>\n    </Box>\n  );\n};\n\nexport default InitialMenu;\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Box, Row, Button } from '../../ui';\n\nconst MovesMenu = ({ currentPokemon }) => {\n  React.useEffect(() => {\n    console.log('currentPokemon', currentPokemon.moves);\n  });\n  return (\n    <Box>\n      <Row>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n        >\n          {currentPokemon.moves[0].move.name}\n        </Button>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n        >\n          {currentPokemon.moves[1].move.name}\n        </Button>\n      </Row>\n      <Row>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n        >\n          {currentPokemon.moves[2].move.name}\n        </Button>\n        <Button\n          className={css`\n            width: 150px;\n            height: 75px;\n            background-color: transparent;\n            border: 2px solid black;\n            border-radius: 20px;\n          `}\n        >\n          {currentPokemon.moves[3].move.name}\n        </Button>\n      </Row>\n    </Box>\n  );\n};\n\nexport default MovesMenu;\n","import React from 'react';\nimport InitialMenu from './InitialMenu';\nimport { Box } from '../../ui';\nimport MovesMenu from './MovesMenu';\n\nconst BottomMenuContainer = ({ party, sceneToggler }) => {\n  let [currentPokemon, setCurrentPokemon] = React.useState(party[0]);\n  let [isFighting, setIsFighting] = React.useState(false);\n  const toggleFighting = () => {\n    setIsFighting(true);\n    sceneToggler('battlescene');\n  };\n  return (\n    <Box\n      position='absolute'\n      height='10rem'\n      border='2px solid black'\n      bottom='0'\n      backgroundColor='lightgray'\n      width='100%'\n    >\n      <Box>\n        <InitialMenu\n          party={party}\n          currentPokemon={currentPokemon}\n          toggleFighting={toggleFighting}\n          sceneToggler={sceneToggler}\n        />\n        {isFighting ? <MovesMenu currentPokemon={currentPokemon} /> : null}\n      </Box>\n    </Box>\n  );\n};\n\nexport default BottomMenuContainer;\n","import React from 'react';\nimport { Row, Container, Image, Subheader } from '../../ui';\n\nconst PartyList = ({ party }) => {\n  console.log(party);\n  return (\n    <Container>\n      {party.map(pokemon => (\n        <Row key={pokemon.id}>\n          <Image src={pokemon.images.front_default} />\n          <Subheader>{pokemon.name}</Subheader>\n        </Row>\n      ))}\n    </Container>\n  );\n};\n\nexport default PartyList;\n","import React from 'react';\nimport { Box } from '../../ui';\n\nconst ItemList = () => {\n  return (\n    <Box>\n      <p>This is the item list page</p>\n    </Box>\n  );\n};\n\nexport default ItemList;\n","import React from 'react';\nimport { Box, Title, Strong } from '../../ui';\n\nconst CurrentPokemonStats = ({ currentPokemon }) => {\n  const baseStats = currentPokemon.stats.map(pokemon => pokemon.base_stat);\n  const level = Math.floor(\n    baseStats.reduce((a, b) => a + b) / baseStats.length / 2.5\n  );\n\n  const health = Math.floor(level * 3);\n  let currentHealth = 60;\n\n  return (\n    <Box>\n      <Title>{currentPokemon.name}</Title>\n      <Strong>L: {level}</Strong>\n      <br />\n      <Strong>\n        {currentHealth}/{health}\n      </Strong>\n      <Box\n        position='absolute'\n        bg='green'\n        width={`${(currentHealth / health) * 100}%`}\n      >\n        <br />\n      </Box>\n    </Box>\n  );\n};\n\nexport default CurrentPokemonStats;\n","import React from 'react';\nimport { Column, NoMarginRow, Image } from '../../ui';\nimport CurrentPokmeonStats from './CurrentPokemonStats';\n\nconst OpponentScene = ({ opponentParty }) => {\n  let [currentPokemon, setCurrentPokemon] = React.useState(opponentParty[0]);\n\n  console.log('opponentPokemon', currentPokemon);\n  return (\n    <NoMarginRow\n      width='100%'\n      mr='0px'\n      ml='0px'\n      height='310px'\n      position='relative'\n      top='0px'\n    >\n      <Column width='50%'>\n        <CurrentPokmeonStats currentPokemon={currentPokemon} />\n      </Column>\n      <Column width='50%'>\n        <Image src={currentPokemon.images.front_default} width='100%' />\n      </Column>\n    </NoMarginRow>\n  );\n};\n\nexport default OpponentScene;\n","import React from 'react';\nimport { Column, NoMarginRow, Image } from '../../ui';\nimport CurrentPokmeonStats from './CurrentPokemonStats';\n\nconst PlayerScene = ({ playerParty }) => {\n  let [currentPokemon, setCurrentPokemon] = React.useState(playerParty[0]);\n  console.log('playerPokemon', currentPokemon);\n  return (\n    <NoMarginRow\n      width='100%'\n      mr='0px'\n      ml='0px'\n      position='relative'\n      bottom='0'\n      height='310px'\n    >\n      <Column width='50%'>\n        <Image src={currentPokemon.images.back_default} width='100%' />\n      </Column>\n      <Column width='50%'>\n        <CurrentPokmeonStats currentPokemon={currentPokemon} />\n      </Column>\n    </NoMarginRow>\n  );\n};\n\nexport default PlayerScene;\n","import React from 'react';\n\nimport OpponentScene from './OpponentScene';\nimport PlayerScene from './PlayerScene';\nimport { Box } from '../../ui';\n\nconst BattleScene = ({ playerParty, opponentParty }) => {\n  return (\n    <Box>\n      <OpponentScene opponentParty={opponentParty} />\n      <PlayerScene playerParty={playerParty} />\n    </Box>\n  );\n};\n\nexport default BattleScene;\n","import React from 'react';\nimport Axios from 'axios';\nimport {\n  BattleGlobalProvider,\n  BattleGlobalContext,\n} from '../../Context/BattleGlobalState';\nimport { Box } from '../../ui';\nimport { generations } from '../../api';\nimport BottomMenuContainer from './BottomMenuContainer';\nimport PartyList from './PartyList';\nimport ItemList from './ItemList';\nimport BattleScene from './BattleScene';\n\nconst Battle = () => {\n  const { addPokemonToOpponentParty, opponentParty } = React.useContext(\n    BattleGlobalContext\n  );\n  let [party, setParty] = React.useState([]);\n  let [viewState, setViewState] = React.useState('');\n  let [viewBattle, setViewBattle] = React.useState(false);\n\n  const getOpponentParty = () => {\n    const generationValues = Object.values(generations);\n    const gensArr = [];\n    for (let i = 0; i <= 4; i++) {\n      const gen = Math.floor(Math.random() * generationValues.length);\n      gensArr.push(gen);\n    }\n    gensArr.forEach(gen => {\n      Axios.get(generationValues[gen]).then(response => {\n        const pokemon =\n          response.data.results[\n            Math.floor(Math.random() * response.data.results.length)\n          ];\n        Axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`).then(\n          response => {\n            const res = response.data;\n            const moves = res.moves.slice(0, 4);\n            addPokemonToOpponentParty({\n              id: res.id,\n              name: res.name,\n              abilities: res.abilities,\n              moves: moves,\n              images: res.sprites,\n              stats: res.stats,\n              types: res.types,\n            });\n          }\n        );\n      });\n    });\n  };\n\n  React.useEffect(() => {\n    const localStorageRef = localStorage.getItem('party');\n    if (localStorageRef) {\n      setParty(JSON.parse(localStorageRef));\n      setViewState('battlescene');\n    }\n    getOpponentParty();\n  }, []);\n\n  React.useEffect(() => {\n    if (party.length === 5 && opponentParty.length === 5) {\n      setViewBattle(true);\n    }\n  }, [party, opponentParty]);\n\n  const sceneToggler = scene => {\n    setViewState(scene);\n  };\n  if (!!viewBattle) {\n    return (\n      <BattleGlobalProvider>\n        <Box pt='3rem'>\n          <Box border='3px solid black' height='50rem' position='relative'>\n            {viewState === 'partylist' && <PartyList party={party} />}\n            {viewState === 'itemlist' && <ItemList />}\n            {viewState === 'battlescene' && (\n              <BattleScene playerParty={party} opponentParty={opponentParty} />\n            )}\n            <BottomMenuContainer party={party} sceneToggler={sceneToggler} />\n          </Box>\n        </Box>\n      </BattleGlobalProvider>\n    );\n  }\n  return null;\n};\n\nexport default Battle;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { PokedexGlobalProvider } from './Context/PokedexGlobalState';\nimport { BattleGlobalProvider } from './Context/BattleGlobalState';\nimport Pokedex from './Components/Pokedex/pokedex';\nimport Battle from './Components/Battle/Index';\nimport { Box, Container } from './ui';\n\nconst App = () => {\n  return (\n    <Router>\n      <Box\n        className='App'\n        style={{\n          backgroundColor: '#f1f5e6',\n          height: '150vh',\n        }}\n      >\n        <Container>\n          <Switch>\n            <Route exact path='/'>\n              <PokedexGlobalProvider>\n                <Pokedex />\n              </PokedexGlobalProvider>\n            </Route>\n            <Route path='/battle'>\n              <BattleGlobalProvider>\n                <Battle />\n              </BattleGlobalProvider>\n            </Route>\n          </Switch>\n        </Container>\n      </Box>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}