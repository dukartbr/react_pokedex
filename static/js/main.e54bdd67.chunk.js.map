{"version":3,"sources":["ui/index.js","api.js","MovesTable.js","pokemonCard.js","PokemonButton.js","Welcome.js","PokedexLeftHeader.js","PartyItem.js","PartyContainer.js","GenerationsTab.js","SearchBar.js","pokedex.js","App.js","index.js"],"names":["Colors","DarkRed","LightRed","Orange","Yellow","Green","BlueOne","BlueTwo","BlueThree","Gray","DarkGray","DarkPurple","breakpoints","Box","styled","div","border","space","color","typography","layout","flexbox","grid","background","position","shadow","Header","textAlign","fontFamily","fontSize","width","Subheader","textTransform","Title","Span","display","Row","flexWrap","marginRight","marginLeft","Column","flexDirection","Container","Panel","borderRadius","SmallScreen","LargeScreen","SearchInput","input","Button","button","ListContainer","ul","ListItem","li","Image","img","Icon","i","Table","p","table","TableData","td","TableHeadData","th","TableHead","thead","TableRow","tr","TableBody","tbody","generations","strong","gen1","gen2","gen3","gen4","MovesTable","moveStats","className","map","move","key","name","damage_class","power","accuracy","PokemonCard","currentPokemon","partyHandler","party","isInParty","id","abilities","images","stats","types","React","useState","abilityDescriptions","setAbilityDescriptions","setMoveStats","useEffect","Promise","all","ability","Axios","get","url","then","values","value","data","effect_entries","short_effect","moves","length","slice","bg","borderColor","height","pokemon","type","onClick","css","src","front_default","alt","padding","stat","float","base_stat","bottom","right","fontWeight","mr","ml","PokemonButton","renderCard","Welcome","PokedexLeftHeader","mt","boxShadow","pt","PartyItem","renderCardHandler","pokemonName","style","top","left","PartyContainer","renderPartyCard","GenerationsTab","props","updateGenHandler","e","updateGeneration","target","zIndex","SearchBar","setSearchQuery","searchQuery","onChange","Pokedex","generation","setGeneration","setParty","pokemons","setPokemons","setcurrentPokemon","displayCard","setDisplayCard","getPokemon","gen","response","results","console","log","message","localStorage","setItem","JSON","stringify","res","sprites","catch","filteredPokemon","pokemonList","query","filter","toLowerCase","indexOf","pb","borderRaidus","overflow","find","partyItem","alert","App","backgroundColor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e54bdd67.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {\n  border,\n  space,\n  color,\n  typography,\n  layout,\n  flexbox,\n  grid,\n  background,\n  position,\n  shadow,\n} from 'styled-system';\n\nexport const Colors = {\n  DarkRed: '#dc0059',\n  LightRed: '#ff0050',\n  Orange: '#ff8945',\n  Yellow: '#faf139',\n  Green: '#00fc2b',\n  BlueOne: '#14eaff',\n  BlueTwo: '#14daff',\n  BlueThree: '#14a9ff',\n  Gray: '#f1f5e6',\n  DarkGray: '#040054',\n  DarkPurple: '#4f045a',\n};\n\nexport const sizes = {\n  AppHeight: '1000px',\n};\n\nexport const breakpoints = {\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n};\n\nexport const Box = styled.div`\n    ${border}\n    ${space}\n    ${color}\n    ${typography}\n    ${layout}\n    ${flexbox}\n    ${grid}\n    ${background}\n    ${position}\n    ${shadow}\n`;\n\nexport const Header = styled(Box)({\n  textAlign: 'center',\n  color: 'white',\n  fontFamily: 'Acme',\n  fontSize: '2.5rem',\n  width: '100%',\n});\n\nexport const Subheader = styled(Box)({\n  textAlign: 'center',\n  fontFamily: 'Acme',\n  fontSize: '2rem',\n  width: '100%',\n  textTransform: 'capitalize',\n});\n\nexport const Title = styled(Subheader)({\n  fontFamily: 'Asap',\n  fontSize: '1.5rem',\n});\n\nexport const Span = styled(Box)({\n  fontSize: '1rem',\n  display: 'block',\n  fontFamily: 'Asap',\n  textTransform: 'capitalize',\n  //   color: 'white',\n});\n\nexport const Row = styled(Box)({\n  display: 'flex',\n  flexWrap: 'wrap',\n  marginRight: '-15px',\n  marginLeft: '-15px;',\n});\n\nexport const NoMarginRow = styled(Box)({\n  display: 'flex',\n  flexWrap: 'wrap',\n  marginRight: '0px',\n  marginLeft: '0px',\n});\n\nexport const Column = styled(Box)({\n  display: 'flex',\n  flexDirection: 'column',\n});\n\nexport const Container = styled.div`\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  @media screen and (min-width: ${breakpoints.sm}) {\n    max-width: 540px;\n  }\n  @media screen and (min-width: ${breakpoints.md}) {\n    max-width: 720px;\n  }\n  @media screen and (min-width: ${breakpoints.lg}) {\n    max-width: 960px;\n  }\n  @media screen and (min-width: ${breakpoints.xl}) {\n    max-width: 1140px;\n  }\n`;\n\nexport const Panel = styled.div`\n  background-color: ${Colors.LightRed};\n  border: 2px solid ${Colors.DarkPurple};\n  ${border.borderRadius}\n  padding: 30px;\n  height: ${sizes.AppHeight};\n  position: relative;\n  box-shadow: 5px 10px 15px ${Colors.DarkPurple};\n`;\n\nexport const SmallScreen = styled(Box)`\n  background: repeating-linear-gradient(\n    45deg,\n    #14daff,\n    #14daff 20px,\n    #14eaff 20px,\n    #14eaff 40px\n  );\n`;\n\nexport const LargeScreen = styled(Box)`\n  background: repeating-linear-gradient(\n    45deg,\n    #14daff,\n    #14daff 80px,\n    #14eaff 80px,\n    #14eaff 160px\n  );\n  border: 2px solid ${Colors.DarkPurple};\n`;\n\nexport const SearchInput = styled.input`\n  width: 80%;\n  margin-right: 10%;\n  margin-left: 10%;\n  margin-bottom: 15px;\n  background-color: transparent;\n  border: none;\n  font-family: 'Acme';\n  color: ${Colors.DarkPurple};\n  border-bottom: 2px solid ${Colors.DarkPurple};\n`;\n\nexport const Button = styled.button``;\n\nexport const ListContainer = styled.ul``;\n\nexport const ListItem = styled.li``;\n\nexport const Image = styled.img``;\n\nexport const Icon = styled.i``;\n\nexport const Text = styled.p``;\n\nexport const Table = styled.table`\n  width: 100%;\n`;\n\nexport const TableData = styled.td`\n  border: 1px solid ${Colors.Orange};\n  padding: 5px;\n`;\n\nexport const TableHeadData = styled.th`\n  border: 1px solid ${Colors.Orange};\n  padding: 5px;\n`;\n\nexport const TableHead = styled.thead``;\n\nexport const TableRow = styled.tr``;\n\nexport const TableBody = styled.tbody``;\n\nexport const Strong = styled.strong``;\n","export const generations = {\n  gen1: 'https://pokeapi.co/api/v2/pokemon?limit=151',\n  gen2: 'https://pokeapi.co/api/v2/pokemon?limit=100&offset=151',\n  gen3: 'https://pokeapi.co/api/v2/pokemon?limit=135&offset=251',\n  gen4: 'https://pokeapi.co/api/v2/pokemon?limit=107&offset=386',\n};\n","import React from 'react';\nimport {\n  Table,\n  TableData,\n  TableHeadData,\n  TableHead,\n  TableRow,\n  TableBody,\n} from './ui';\n\nconst MovesTable = ({ moveStats }) => {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Name\n          </TableHeadData>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Class\n          </TableHeadData>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Power\n          </TableHeadData>\n          <TableHeadData className='pokemonCard--moves-title'>\n            Accuracy\n          </TableHeadData>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {moveStats.map((move, i) => (\n          <TableRow key={i}>\n            <TableData>{move.name}</TableData>\n            <TableData>{move.damage_class}</TableData>\n            <TableData>{move.power ? move.power : 'N/A'}</TableData>\n            <TableData>{move.accuracy ? move.accuracy : 'N/A'}</TableData>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default MovesTable;\n","import React from 'react';\nimport Axios from 'axios';\nimport { css } from 'emotion';\nimport {\n  Box,\n  Column,\n  Container,\n  Row,\n  Button,\n  SmallScreen,\n  Subheader,\n  Span,\n  Title,\n  Colors,\n  Image,\n  Icon,\n  ListContainer,\n  ListItem,\n} from './ui';\nimport MovesTable from './MovesTable';\n\nconst PokemonCard = ({ currentPokemon, party, partyHandler, isInParty }) => {\n  const { id, name, abilities, images, stats, types } = currentPokemon;\n  let [abilityDescriptions, setAbilityDescriptions] = React.useState([]);\n  let [moveStats, setMoveStats] = React.useState([]);\n\n  React.useEffect(() => {\n    Promise.all(\n      abilities.map((ability) => {\n        return Axios.get(ability.ability.url);\n      })\n    ).then((values) => {\n      setAbilityDescriptions(\n        values.map((value) => value.data.effect_entries[0].short_effect)\n      );\n    });\n  }, [abilities]);\n\n  React.useEffect(() => {\n    const { moves } = currentPokemon;\n    if (moveStats.length > 0) return;\n    Promise.all(\n      moves.slice(0, 4).map((move) => {\n        return Axios.get(move.move.url);\n      })\n    ).then((values) => {\n      setMoveStats(\n        values.map((value) => ({\n          name: value.data.name,\n          damage_class: value.data.damage_class.name,\n          accuracy: value.data.accuracy,\n          power: value.data.power,\n        }))\n      );\n    });\n  }, [currentPokemon, moveStats]);\n\n  React.useEffect(() => {\n    setAbilityDescriptions([]);\n    setMoveStats([]);\n  }, [id]);\n\n  const togglePartyHandler = (pokemon) => {\n    partyHandler(pokemon);\n  };\n\n  return (\n    <Container>\n      <Box\n        p='30px 10px'\n        bg='#f1f5e6'\n        border='2px solid'\n        borderColor={Colors.DarkPurple}\n        borderRadius='15px'\n      >\n        <Box height='100px'>\n          <Subheader color='$DarkRed'>{name}</Subheader>\n          {types.map((pokemon) => (\n            <Span key={pokemon.type.name} color='#000000' textAlign='center'>\n              {pokemon.type.name}\n            </Span>\n          ))}\n        </Box>\n        <SmallScreen\n          border='2px solid'\n          borderColor={Colors.DarkPurple}\n          borderRadius='15px'\n          height='250px'\n          display='block'\n          textAlign='center'\n          position='relative'\n        >\n          <Button\n            onClick={() => togglePartyHandler(currentPokemon)}\n            className={css`\n              float: left;\n              color: white;\n              margin-top: 5px;\n              margin-left: 5px;\n              background-color: ${Colors.Orange};\n              border: none;\n              padding: 10px;\n              border-radius: 15px;\n              &:disabled {\n                background-color: gray;\n              }\n            `}\n          >\n            {isInParty ? (\n              <Icon className='fas fa-trash'></Icon>\n            ) : (\n              <Icon className='fas fa-star'></Icon>\n            )}\n          </Button>\n          <Row>\n            <Column width='40%'>\n              <Image src={images.front_default} alt='' width='200px' />\n            </Column>\n            <Column width='60%'>\n              <Box padding='15px 20px'>\n                <Title color='white' textAlign='center'>\n                  Stats\n                </Title>\n                <ListContainer>\n                  {stats.map((pokemon) => (\n                    <ListItem\n                      key={pokemon.stat.name}\n                      className={css`\n                        list-style-type: none;\n                        color: white;\n                        text-align: left;\n                        font-weight: bold;\n                        font-family: 'Asap', sans-serif;\n                        text-transform: uppercase;\n                      `}\n                    >\n                      <Span float='right'>\n                        {pokemon.stat.name}: {pokemon.base_stat}\n                      </Span>\n                    </ListItem>\n                  ))}\n                </ListContainer>\n              </Box>\n            </Column>\n          </Row>\n          <Span\n            position='absolute'\n            bottom='5px'\n            right='5px'\n            color='black'\n            fontWeight='bold'\n          >\n            ID: {id}\n          </Span>\n        </SmallScreen>\n        <Row>\n          <Column width='100%'>\n            <Title textAlign='center'>Abilities</Title>\n            <ListContainer>\n              {abilities.map((ability, i) => {\n                return (\n                  <ListItem key={i}>\n                    {ability.ability.name} - {abilityDescriptions[i]}\n                  </ListItem>\n                );\n              })}\n            </ListContainer>\n          </Column>\n        </Row>\n        <Row>\n          <Box\n            mr='10%'\n            ml='10%'\n            width='80%'\n            background={Colors.Yellow}\n            border='3px solid'\n            borderColor={Colors.Orange}\n            p='20px 0px'\n            borderRadius='30px'\n          >\n            <Title textAlign='center'>Moves</Title>\n            <MovesTable moveStats={moveStats} />\n          </Box>\n        </Row>\n      </Box>\n    </Container>\n  );\n};\n\nexport default PokemonCard;\n","import React from 'react';\nimport { css } from 'emotion';\n\nconst PokemonButton = ({ name, renderCard, pokemon }) => (\n  <button\n    key={name}\n    onClick={() => renderCard(pokemon)}\n    className={css`\n      padding: 10px 20px;\n      background: none;\n      border: none;\n      color: white;\n      font-size: 55px;\n      text-align: center;\n      display: block;\n      margin: 10px 0px;\n      margin-right: auto;\n      margin-left: auto;\n      font-family: 'Acme', sans-serif;\n      text-transform: capitalize;\n    `}\n  >\n    {name}\n  </button>\n);\n\nexport default PokemonButton;\n","import React from 'react';\nimport { Span, Header } from './ui';\n\nconst Welcome = () => {\n  return (\n    <>\n      <Header>Welcome</Header>\n      <Span textAlign='center' color='#ffffff'>\n        This is a React based Pokedex using the PokeAPI\n      </Span>\n    </>\n  );\n};\n\nexport default Welcome;\n","import React from 'react';\nimport { Box } from './ui';\n\nconst PokedexLeftHeader = () => {\n  return (\n    <Box\n      position='absolute'\n      ml='-53px'\n      mt='-53px'\n      borderRadius='50px 0px 0px 0px'\n      width='116%'\n      height='100px'\n      boxShadow='1px 2px 5px #4f045a'\n      bg='#ff0050'\n    >\n      <Box pt='5px'>\n        <Box textAlign='center' fontFamily='Acme' fontSize='60px' color='white'>\n          RéactDex\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PokedexLeftHeader;\n","import React from 'react';\nimport { css } from 'emotion';\nimport { Box, SmallScreen, Image, Button } from './ui';\n\nconst PartyItem = ({ pokemon, renderCardHandler }) => {\n  return (\n    <Button\n      className={css`\n        background: transparent;\n        border: none;\n      `}\n      onClick={() => renderCardHandler(pokemon)}\n    >\n      <Box p='15px 0px'>\n        <SmallScreen\n          border='3px solid #faf139'\n          width='70px'\n          height='70px'\n          mr='5px'\n          ml='5px'\n          position='relative'\n        >\n          <Image\n            className='favorites--item'\n            src={pokemon.images.front_default}\n            alt={pokemon.pokemonName}\n            style={{\n              position: 'absolute',\n              width: '70px',\n              top: '0px',\n              left: '0px',\n            }}\n          />\n        </SmallScreen>\n      </Box>\n    </Button>\n  );\n};\n\nexport default PartyItem;\n","import React from 'react';\nimport { Row, Header } from './ui';\nimport PartyItem from './PartyItem';\n\nconst PartyContainer = ({ party, renderPartyCard }) => {\n  const renderCardHandler = (pokemon) => {\n    renderPartyCard(pokemon);\n  };\n\n  return (\n    <>\n      <Header\n        textAlign='center'\n        color='white'\n        fontFamily='Acme'\n        fontSize='35px'\n        width='100%'\n      >\n        Party\n      </Header>\n      <Row>\n        {party.map((pokemon, i) => (\n          <PartyItem\n            key={i}\n            pokemon={pokemon}\n            renderCardHandler={renderCardHandler}\n          />\n        ))}\n      </Row>\n    </>\n  );\n};\nexport default PartyContainer;\n","import React from 'react';\nimport { Box, ListContainer, ListItem, Button, Colors } from './ui';\nimport { css } from 'emotion';\n\nfunction GenerationsTab(props) {\n  const updateGenHandler = (e) => {\n    props.updateGeneration(e.target.id);\n  };\n\n  return (\n    <Box position='absolute' zIndex='999' left='-129px' top='70px'>\n      <ListContainer position='relative'>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen1'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 1\n          </Button>\n        </ListItem>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen2'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 2\n          </Button>\n        </ListItem>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen3'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 3\n          </Button>\n        </ListItem>\n        <ListItem\n          className={css`\n            list-style-type: none;\n            margin-top: 90px;\n            margin-left: -3px;\n            transform: rotate(-90deg);\n            padding: 5px 30px;\n            font-family: 'Acme', sans-serif;\n            background-color: ${Colors.LightRed};\n            border-radius: 30px 30px 0px 0px;\n            border: 2px solid ${Colors.DarkPurple};\n            ::active {\n              background-color: $DarkRed;\n            }\n          `}\n        >\n          <Button\n            id='gen4'\n            onClick={updateGenHandler}\n            className={css`\n              background-color: transparent;\n              border: none;\n              color: white;\n            `}\n          >\n            Gen 4\n          </Button>\n        </ListItem>\n      </ListContainer>\n    </Box>\n  );\n}\n\nexport default GenerationsTab;\n","import React from 'react';\nimport { Box, SearchInput, Icon, Colors } from './ui';\n\nconst SearchBar = ({ setSearchQuery, searchQuery }) => {\n  return (\n    <Box position='relative'>\n      <Icon\n        className={'fas fa-search'}\n        style={{\n          color: `${Colors.DarkPurple}`,\n          top: '10px',\n          left: '5px',\n          position: 'absolute',\n        }}\n      ></Icon>\n      <SearchInput\n        type='text'\n        onChange={(e) => setSearchQuery(e.target.value)}\n        value={searchQuery}\n      />\n    </Box>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport Axios from 'axios';\nimport { Box, Column, Container, Row, Panel, LargeScreen } from './ui';\nimport { generations } from './api';\nimport PokemonCard from './pokemonCard';\nimport PokemonButton from './PokemonButton';\nimport Welcome from './Welcome';\nimport PokedexLeftHeader from './PokedexLeftHeader';\nimport PartyContainer from './PartyContainer';\nimport GenerationsTab from './GenerationsTab';\nimport SearchBar from './SearchBar';\n\nconst Pokedex = () => {\n  let [generation, setGeneration] = React.useState('gen1');\n  let [party, setParty] = React.useState([]);\n  let [pokemons, setPokemons] = React.useState([]);\n  let [currentPokemon, setcurrentPokemon] = React.useState({\n    id: null,\n    name: null,\n    abilities: [],\n    moves: [],\n    images: [],\n    stats: [],\n    types: [],\n  });\n  let [displayCard, setDisplayCard] = React.useState(false);\n  let [searchQuery, setSearchQuery] = React.useState('');\n\n  React.useEffect(() => {\n    getPokemon(generation);\n  }, [generation]);\n\n  const getPokemon = (gen) => {\n    Axios.get(generations[gen]).then(\n      (response) => {\n        setPokemons(response.data.results);\n      },\n      (e) => {\n        console.log('handle error here: ', e.message);\n      }\n    );\n  };\n\n  const updateGeneration = (gen) => {\n    setGeneration(gen);\n  };\n\n  const togglePartyHandler = (pokemon) => {\n    if (!party.find((p) => p.id === pokemon.id)) {\n      if (party.length <= 4) {\n        setParty(...party, pokemon);\n      } else {\n        alert('You may only have up to 5 Pokemon in your party');\n      }\n      return;\n    }\n    setParty(party.filter((partyItem) => partyItem.id !== pokemon.id));\n  };\n\n  React.useEffect(() => {\n    localStorage.setItem(`party`, JSON.stringify(party));\n  }, [party]);\n\n  const renderCard = (pokemon) => {\n    Axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n      .then((response) => {\n        const res = response.data;\n        const moves = res.moves.slice(0, 4);\n        setcurrentPokemon({\n          id: res.id,\n          name: res.name,\n          abilities: res.abilities,\n          moves: moves,\n          images: res.sprites,\n          stats: res.stats,\n          types: res.types,\n        });\n        setDisplayCard(true);\n      })\n      .catch((e) => {\n        console.log('handle error here: ', e.message);\n      });\n  };\n\n  const renderPartyCard = (pokemon) => {\n    renderCard(pokemon);\n  };\n\n  const filteredPokemon = (pokemonList, query) => {\n    if (!query) return pokemonList;\n    return pokemonList.filter(\n      (p) => p.name.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  };\n\n  return (\n    <Box position='relative' pt='3rem' pb='3rem'>\n      <GenerationsTab updateGeneration={updateGeneration} />\n      <Row>\n        <Column width='50%' p='0'>\n          <Panel borderRadius='50px 0px 0px 50px'>\n            <Box\n              position='relative'\n              p='20px'\n              border='3px solid #4f045a'\n              borderRaidus='30px 0px 0px 15px'\n              height='950px'\n            >\n              <PokedexLeftHeader />\n              <Box\n                p='50px 10px'\n                bg='#f1f5e6'\n                border='2px solid #4f045a'\n                borderRadius='30px'\n                mt='110px'\n              >\n                <SearchBar\n                  setSearchQuery={setSearchQuery}\n                  searchQuery={searchQuery}\n                />\n                <LargeScreen overflow='scroll' height='400px'>\n                  {filteredPokemon(pokemons, searchQuery).length !== 0 ? (\n                    filteredPokemon(pokemons, searchQuery).map((pokemon) => (\n                      <PokemonButton\n                        key={pokemon.name}\n                        name={pokemon.name}\n                        renderCard={renderCard}\n                        pokemon={pokemon}\n                      />\n                    ))\n                  ) : (\n                    <Box\n                      width='100%'\n                      textAlign='center'\n                      color='white'\n                      fontSize='3rem'\n                      fontFamily='Acme'\n                      mt='6rem'\n                    >\n                      No Results!\n                    </Box>\n                  )}\n                </LargeScreen>\n              </Box>\n              <Box padding='15px 0px'>\n                <Container>\n                  <Row>\n                    <PartyContainer\n                      party={party}\n                      renderPartyCard={renderPartyCard}\n                    />\n                  </Row>\n                </Container>\n              </Box>\n            </Box>\n          </Panel>\n        </Column>\n        <Column width='50%' p='0'>\n          <Panel borderRadius='0px 50px 50px 0px' position='relative'>\n            {displayCard ? (\n              <PokemonCard\n                currentPokemon={currentPokemon}\n                party={party}\n                partyHandler={togglePartyHandler}\n                isInParty={() => party.indexOf(currentPokemon) !== -1}\n              />\n            ) : (\n              <Welcome />\n            )}\n            <Box\n              textAlign='center'\n              color='white'\n              fontFamily='Acme'\n              fontSize='35px'\n              position='absolute'\n              bottom='20px'\n              left='0px'\n              right='0px'\n              ml='25%'\n              mr='25%'\n              width='50%'\n            >\n              Party [{party.length} / 5]\n            </Box>\n          </Panel>\n        </Column>\n      </Row>\n    </Box>\n  );\n};\n\nexport default Pokedex;\n","import React from 'react';\nimport Pokedex from './pokedex';\nimport { Box, Container } from './ui';\n\nconst App = () => {\n  return (\n    <Box\n      className='App'\n      style={{\n        backgroundColor: '#f1f5e6',\n        height: '150vh',\n      }}\n    >\n      <Container>\n        <Pokedex />\n      </Container>\n    </Box>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}